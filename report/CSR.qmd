---
title: "CSR"
author: "Pavel"
format: html
editor: visual
---

```{r}
#| include: false
library(tidyverse)
library(kableExtra)
library(knitr)
source("../R/constants.R")
```

## CSR (Casino Strategies Report) 2024

Top-1 Gambling Journal according to International Casino Journals Committee

![](pics/ocean.jpeg){fig-align="center" width="300"}

## Solution Specifics

1.  Code As Much As You Can (**functional** code and **tidyverse style** where is possible).
2.  Game simulation and **data wrangling**.
3.  Creating different gaming strategies using \[un\]common sense and **statistics**.
4.  Finding best strategy backed by statistics.
5.  **Data Visualization** of metrics by different strategies using **ggplot2**.
6.  **Results presentations** with Quarto (next gen RMarkdown).

## Casino Rules

1.  There are `r n_bandits` machines
2.  Из них `r n_bandits-1` имеют матожидание выигрыша ниже цены игры
3.  1 позволяет получить достоверную прибыль in the long run
4.  Winning machine might be changed after `r n_games_change_p` winnings in this machine to prevent exploit.

## Basic statistics

Insert expected values of winnings

Add plot of sigmoid plot(1:10000, (\\(x) sigmoid_paramed(x) )(1:10000))

```{r}
#| include: false
exp_losing <- sum(losing_p_distr * winning_sizes)
exp_winning <- sum(winning_p_distr * winning_sizes)
p_losing <- (n_bandits - 1) / n_bandits
p_winning <- 1 / n_bandits
avg_win = p_losing * exp_losing + p_winning * exp_winning
```

-   Всего машин: `r n_bandits`. 
-   Цена игры: `r price`. 
-   У проигрышных машин матожидание выигрыша `r exp_losing |> round(2)`.
-   У выигрышной машины матожидание выигрыша `r exp_winning |> round(2)`.
-   При рандомной стратегии матожидание выигрыша: `r avg_win |> round(2)`.
-   При других стратегиях... Не так все просто, но симуляциями можем оценить! (найти, сделать)

## Simulation rules

1.  One iteration has `r n_steps` steps

## Strategies

1.  Randy\
    Randomly pulls machine, no brain at all
2.  Average man
3.  T shaped man
4.  Biased Bayes
5.  Anything else?



```{r}
#| echo: false
1 + 1
knitr::kable(head(iris),format = "html")
knitr::kable(tibble(winning_sizes, winning_p_distr, losing_p_distr),format = "html") |> kable_styling()
(winning_p_distr * winning_sizes) |> sum()
(losing_p_distr * winning_sizes) |> sum()
```

123123 `r (losing_p_distr * winning_sizes) |> sum() |> round(2)` You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

## Visualization of strategies

Вставить графики из plots.R
```{r}
#| echo: false
1+1
```


## Best strategy

Оценить матожидание

## Conclusions

1.  You will never win in the real casino
2.  Statistics is useful
3.  Simulations are fun and cheap
4.  Write as many functions as possible
